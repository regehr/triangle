{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red170\green13\blue145;
\red38\green71\blue75;\red28\green0\blue207;\red196\green26\blue22;\red92\green38\blue153;\red46\green13\blue110;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgray\c100000;\csgenericrgb\c66500\c5200\c56900;
\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c18100\c5200\c43100;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3     
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \cf4 if\cf2 (\cf5 classifyTriangle\cf2 (\cf6 1\cf2 , \cf6 0\cf2 , \cf6 2\cf2 , \cf6 0\cf2 , \cf6 3\cf2 , \cf6 0\cf2 ) == \cf7 "degenerate: not a triangle"\cf2 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test1 passed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \} \cf4 else\cf2  \{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test1 failed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf2     
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \cf4 if\cf2 (\cf5 classifyTriangle\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , \cf6 0\cf2 , \cf6 1\cf2 , \cf6 1\cf2 , \cf6 0\cf2 ) == \cf7 "right triangle: one 90 degree angle"\cf2 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test2 passed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \} \cf4 else\cf2  \{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test2 failed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf2     
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \cf4 if\cf2 (\cf5 classifyTriangle\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , -\cf6 1\cf2 , \cf6 2\cf2 , \cf6 1\cf2 , \cf6 2\cf2 ) == \cf7 "isoceles: two sides same length"\cf2  )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test3 passed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \} \cf4 else\cf2  \{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test3 failed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf2     
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \cf4 if\cf2 (\cf5 classifyTriangle\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , -\cf6 2\cf2 , \cf6 1\cf2 , \cf6 2\cf2 , \cf6 1\cf2 ) == \cf7 "obtuse: one angle greater than 90 degrees"\cf2  )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test4 passed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \} \cf4 else\cf2  \{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test4 failed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \cf4 if\cf2 (\cf5 classifyTriangle\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , -\cf6 1\cf2 , \cf6 2\cf2 , \cf6 1\cf2 , \cf6 3\cf2 ) == \cf7 "acute: all angles less than 90 degrees"\cf2  )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test5 passed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \} \cf4 else\cf2  \{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test5 failed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \cf4 if\cf2 (\cf5 classifyTriangle\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , -\cf6 1\cf2 , \cf6 2\cf2 , \cf6 1\cf2 , \cf6 3\cf2 ) != \cf7 "scalene: none of the above"\cf2  )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test6 passed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \} \cf4 else\cf2  \{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test6 failed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf2     
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \cf4 if\cf2 (\cf5 classifyTriangle\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , -\cf6 1\cf2 , \cf6 2\cf2 , \cf6 1\cf2 , \cf6 3\cf2 ) != \cf7 "equilateral: all sides same length"\cf2  )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test7 passed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \} \cf4 else\cf2  \{
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2         \cf8 cout\cf2  << \cf7 "Test7 failed"\cf2  << \cf9 endl\cf2 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf2         
\f1\fs24 \cf0 \

\f0\fs22 \cf2     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf2     
\f1\fs24 \cf0 \

\f0\fs22 \cf2     }